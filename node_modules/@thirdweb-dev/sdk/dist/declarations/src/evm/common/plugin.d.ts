import { Abi, PreDeployMetadataFetched, SDKOptions } from "../schema";
import { ThirdwebStorage } from "@thirdweb-dev/storage";
import { ethers } from "ethers";
import { Plugin } from "../types/plugins";
/**
 * @internal
 */
export declare function getCompositePluginABI(address: string, abi: Abi, provider: ethers.providers.Provider, options: SDKOptions, storage: ThirdwebStorage): Promise<Abi>;
export declare function getCompositeABIfromRelease(publishMetadataUri: string, storage: ThirdwebStorage): Promise<Abi>;
export declare function isRouterContract(abi: Abi): boolean;
export declare function getMetadataForPlugins(publishedMetadataUri: string, storage: ThirdwebStorage): Promise<PreDeployMetadataFetched[]>;
/**
 * @internal
 */
export declare function joinABIs(abis: Abi[]): Abi;
export declare function getFunctionSignature(fnInputs: any): string;
export declare function generatePluginFunctions(pluginAddress: string, pluginAbi: Abi): Plugin[];
//# sourceMappingURL=plugin.d.ts.map